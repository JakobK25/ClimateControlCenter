version: '3.8'

services:
  postgres:
    container_name: climate-control-postgres
    image: postgres:16.2  # Specific version instead of latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - climate-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  app-main:
    container_name: climate-control-app
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres/${POSTGRES_DB:-db}
      APP_ENV: ${APP_ENV:-development}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - climate-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

networks:
  climate-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
